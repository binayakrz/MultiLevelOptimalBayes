% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mlob.R
\name{mlob}
\alias{mlob}
\title{Multi-Level Optimal Bayes Function (MLOB)}
\usage{
mlob(
  formula,
  data,
  group,
  balancing = FALSE,
  alpha = 0.05,
  jackknife = TRUE,
  ...
)
}
\arguments{
\item{formula}{A formula specifying the model (e.g., \code{Y ~ X + C...}) where Y is the dependent variable, X is the target variable, and C... represents control variables.}

\item{data}{A data frame containing the variables in the formula.}

\item{group}{A positive numeric value representing the number of groups (J) in the data. The number of rows in \code{data} must be divisible by \code{group}.}

\item{balancing}{Logical. If \code{TRUE}, the data will be balanced across groups. Defaults to \code{FALSE}.}

\item{alpha}{A numeric value representing the confidence level used to calculate confidence intervals for the estimators. Defaults to \code{0.05}.}

\item{jackknife}{Logical. If \code{TRUE}, the jackknife resampling method will be applied. Defaults to \code{TRUE}.}

\item{...}{Additional arguments passed to the function.}
}
\value{
A list containing the results of the Bayesian estimation including model formula, response and predictor variables, and other relevant details.
}
\description{
This function performs multi-level analysis using an optimal Bayesian approach.
It is primarily designed for cases where data can be divided into multiple groups
and ensures that the data is balanced across groups.
}
\details{
This function checks whether the data is balanced (i.e., whether the same number of individuals are present
in each group). If the data is unbalanced and `balancing = TRUE`, the function uses an internal method
to balance the data. Otherwise, if `balancing = FALSE` and the data is unbalanced, the function will stop 
and throw an error message. 

MultiLevelOptimalBayes (MLOB) is designed for small-sample two-level latent variable models, commonly used in
psychology, education, and other disciplines that deal with hierarchical data structures.
}
\examples{
# Example usage with the iris dataset
data(data_cv)
result  mlob(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris, group = 3)

# View summary statistics (similar to summary of a linear model)
summary(result)
## 
## Call:
## result <- mlob (y ~ X + Z, data = ‘dataname’, group = ‘class’, balancing = FALSE, alpha = 0.05, …)
## 
#' ## Coefficients:
##                Estimate Std. Error Confidence Interval (95\%)  z value Pr(>|z|)
## (Intercept)     0.500    0.025    [0.450, 0.550]               20.00   <2e-16 ***
## Sepal.Width     0.300    0.043    [0.220, 0.380]               6.98    <2e-16 ***
## Petal.Length    -0.100   0.021    [-0.140, -0.060]             -4.76   <2e-16 ***
## Petal.Width      0.240   0.024    [0.190, 0.290]               10.00   <2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## Residual standard error: 2.2 on 48 degrees of freedom
## Multiple R-squared:  0.8535, Adjusted R-squared:  0.8504
## F-statistic: 279.6 on 3 and 48 DF,  p-value: < 2.2e-16

}
